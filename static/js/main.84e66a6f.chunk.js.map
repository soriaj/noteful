{"version":3,"sources":["NoteContext.js","SidebarList/SiderbarList.js","SidebarPage/SidebarPage.js","Header/Header.js","Config.js","Note/Note.js","Sentences/Sentence.js","MainList/MainList.js","MainPage/MainPage.js","ValidationError/ValidationError.js","AddFolder/AddFolder.js","AddNote/AddNote.js","App.js","index.js"],"names":["NotesContext","React","createContext","notes","folders","addFolders","addNotes","deleteNotes","SidebarList","this","context","role","className","map","folder","key","id","to","name","icon","faFolderPlus","Component","contextType","SidebarPage","history","props","noteId","match","params","note","find","folderData","folderId","type","onClick","goBack","faUndo","Header","faStickyNote","API_ENDPOINT","Note","handleDelete","event","preventDefault","fetch","Config","method","headers","then","res","ok","json","e","Promise","reject","onDeleteNote","catch","error","console","log","path","push","faTrashAlt","format","modified","Sentences","sentences","slice","Main","handleDeleteNote","filter","getNotesForFolder","Sentence","content","faPlus","defaultProps","MainPage","noteData","split","para","idx","ValidationError","message","Required","uuid4","require","AddFolder","handleClickCancel","state","value","setState","touched","trim","length","body","JSON","stringify","data","nameError","validateName","onSubmit","handleSubmit","htmlFor","placeholder","onChange","updateName","target","disabled","NoteContext","AddNote","selected","Date","contentError","validateContent","folderError","validateFolder","options","i","allowSelection","changeSelection","handleNoteSubmit","updateNoteName","updateNoteContent","App","newNotes","setTimeout","all","folderRes","notesRes","exact","component","MainList","renderSidebarRoutes","renderMainRoutes","contextValue","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.84e66a6f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst NotesContext = React.createContext({\r\n   notes: [],\r\n   folders: [],\r\n   addFolders: () => {},\r\n   addNotes: () => {},\r\n   deleteNotes: () => {},\r\n});\r\n\r\nexport default NotesContext;","import React, { Component } from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFolderPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport NotesContext from '../NoteContext';\r\nimport './SidebarList.css'\r\n\r\nclass SidebarList extends Component{\r\n   static contextType = NotesContext;\r\n   render(){\r\n      // console.log('Sidebar props: ', this.props.folders)\r\n      // const { folders } = this.props\r\n      // console.log('SidebarList context: ', this.context)\r\n      const { folders } = this.context\r\n      return(\r\n         <nav role='navigation' className='nav'>\r\n            {folders.map(folder => \r\n               <div key={folder.id} className='nav_notes_add'>\r\n                  <NavLink to={`/folder/${folder.id}`}>\r\n                     {folder.name}\r\n                  </NavLink>\r\n               </div>\r\n            )}\r\n            <div className='nav_notes_add'>\r\n               <FontAwesomeIcon icon={faFolderPlus} />\r\n                  <NavLink \r\n                  className='nav_notes_button' \r\n                  to='/add-folder'\r\n                  // onClick={() => this.context.addFolders()}\r\n                  > Add Folder\r\n                  </NavLink>\r\n            </div>\r\n         </nav>\r\n      )\r\n   }\r\n}\r\n\r\nexport default SidebarList;","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUndo } from \"@fortawesome/free-solid-svg-icons\";\r\nimport NotesContext from '../NoteContext'\r\n\r\n\r\nclass SidebarPage extends Component{\r\n   static contextType = NotesContext\r\n   render(){\r\n      const { history } = this.props\r\n      const { noteId } = this.props.match.params\r\n      const { notes, folders } = this.context\r\n      const note = notes.find(note => note.id === noteId) \r\n      const folderData = folders.find(folder => folder.id === note.folderId)\r\n      // console.log('Sidebar FolderData: ', folderData)\r\n      return(\r\n         <div className='.nav_notes_add'>\r\n            {folderData && (\r\n               <h3 className='sidebarpage__foldername'>\r\n                  {folderData.name}\r\n               </h3>\r\n            )}\r\n            <button\r\n               className='sidebarpage_back'\r\n               type='button' onClick={() => history.goBack()}\r\n            ><FontAwesomeIcon icon={faUndo} /> Back</button>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nexport default SidebarPage;","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faStickyNote } from \"@fortawesome/free-solid-svg-icons\";\r\nimport './Header.css'\r\n\r\n\r\nclass Header extends Component{\r\n   render(){\r\n      return(\r\n         <header role='banner' className='header'>\r\n            <h1><span><FontAwesomeIcon icon={faStickyNote} /></span><NavLink to='/'>{' '}Noteful</NavLink></h1>\r\n         </header>\r\n      )\r\n   }\r\n}\r\n\r\nexport default Header;","export default {\r\n   API_ENDPOINT: 'http://localhost:9090'\r\n}","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Moment from 'react-moment';\r\nimport NotesContext from '../NoteContext';\r\nimport Config from '../Config'\r\nimport propTypes from 'prop-types';\r\nimport './Note.css'\r\n\r\nclass Note extends Component{\r\n   static propTypes = {\r\n      notes: propTypes.arrayOf(propTypes.shape({\r\n         id: propTypes.string.isRequired,\r\n         name: propTypes.string.isRequired,\r\n         modified: propTypes.string.isRequired\r\n      })),\r\n      onDeleteNote: propTypes.func\r\n   }  \r\n   static contextType = NotesContext\r\n   handleDelete = (event) => {\r\n      event.preventDefault()\r\n      const noteId = this.props.id\r\n\r\n      fetch(`${Config.API_ENDPOINT}/notes/${noteId}`, {\r\n         method: 'DELETE',\r\n         headers: {\r\n            'content-type': 'application/json'\r\n         },\r\n      })\r\n      .then(res => {\r\n         if(!res.ok)\r\n            return res.json().then(e => Promise.reject(e))\r\n         return res.json()\r\n      })\r\n      .then(() => {\r\n         this.context.deleteNotes(noteId)\r\n         this.props.onDeleteNote()\r\n      })\r\n      .catch(error => {\r\n         console.log({error})\r\n      })\r\n   }\r\n   viewNote(path){\r\n      this.props.history.push(path);\r\n   }\r\n   render(){\r\n      return(\r\n         <>\r\n            <h2 className='note_name'>\r\n               <Link to={`/note/${this.props.id}`}>\r\n                  {this.props.name}\r\n               </Link>\r\n            </h2>\r\n            <button \r\n               className='Note__delete'\r\n               type='button'\r\n               onClick={(e) => this.handleDelete(e)}\r\n            >\r\n               <FontAwesomeIcon icon={faTrashAlt} />\r\n               {' '}\r\n               Remove\r\n            </button>\r\n            <div>\r\n               <div>\r\n                  Modified\r\n                  {' '}\r\n                  <span>\r\n                     <Moment format=\"MM/DD/YY\">\r\n                        {this.props.modified}\r\n                     </Moment>\r\n                  </span>\r\n               </div>\r\n            </div>\r\n         </>  \r\n      )\r\n   }\r\n}\r\n\r\nexport default Note;","import React, { Component } from 'react';\r\n\r\nclass Sentences extends Component{\r\n   render(){\r\n      // console.log('Sentences: ', this.props)\r\n      const { sentences } = this.props\r\n      return(\r\n         <>\r\n            <h3>Content:</h3>\r\n            <p>{`${sentences.slice(0, 150)}...`}</p>\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nexport default Sentences;","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Note from '../Note/Note';\r\nimport Sentences from '../Sentences/Sentence';\r\nimport NotesContext from '../NoteContext';\r\nimport './MainList.css'\r\n\r\nclass Main extends Component{\r\n   static defaultProps = {\r\n      notes: []\r\n   }\r\n   static contextType = NotesContext;\r\n   handleDeleteNote = () => {\r\n      this.props.history.push(`/`)\r\n   }\r\n   render(){\r\n      const { notes } = this.context\r\n      const { folderId } = this.props.match.params\r\n      const getNotesForFolder = (notes, folderId) => (\r\n         (!folderId)\r\n           ? notes\r\n           : notes.filter(note => note.folderId === folderId)\r\n       )\r\n      return(\r\n         <section>\r\n            <ul>\r\n               {getNotesForFolder(notes, folderId).map(note => \r\n                  <li key={note.id} className='note_item'>\r\n                     <Note\r\n                        id={note.id}\r\n                        name={note.name}\r\n                        modified={note.modified}\r\n                        onDeleteNote={this.handleDeleteNote}\r\n                     />\r\n                     <Sentences sentences={note.content} />\r\n                  </li>\r\n               )}\r\n            </ul>\r\n            <div className='note_add'>\r\n               <FontAwesomeIcon icon={faPlus} />\r\n               <NavLink className='nav_notes_button' to='/add-note'> \r\n                  Add Note\r\n               </NavLink>\r\n            </div>\r\n         </section>\r\n      )\r\n   }\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\nimport Note from '../Note/Note';\r\nimport './MainPage.css'\r\nimport NotesContext from '../NoteContext'\r\n\r\nclass MainPage extends Component{\r\n   static defaultProps = {\r\n      note: {\r\n         content: '',\r\n      }\r\n   }\r\n   static contextType = NotesContext\r\n   handleDeleteNote = () => {\r\n         this.props.history.push(`/`)\r\n   }\r\n   render(){\r\n      const { notes } = this.context\r\n      const { noteId } = this.props.match.params\r\n      const noteData = notes.find(note => note.id === noteId) || { content: ''}\r\n      return(\r\n         <section className='main_note'>\r\n            <Note\r\n               id={noteData.id}\r\n               name={noteData.name}\r\n               modified={noteData.modified}\r\n               onDeleteNote={this.handleDeleteNote}\r\n            />\r\n            <div>\r\n               {noteData.content.split(/\\n \\r|\\n/).map((para, idx) =>\r\n                  <p key={idx}>{para}</p>\r\n               )}\r\n            </div>\r\n         </section>\r\n      )\r\n   }\r\n}\r\n\r\nexport default MainPage;","import React from 'react';\r\nimport './ValidationError.css'\r\n\r\nexport default function ValidationError(props){\r\n   // console.log(props)\r\n   if(props.message) {\r\n      return(\r\n         <span className='error'>({props.message})</span>\r\n      )\r\n   }\r\n   return <></>\r\n}","import React, { Component } from 'react';\r\nimport Config from '../Config';\r\nimport NoteContext from '../NoteContext'\r\n// import uuid from 'uuid';\r\nimport ValidationError from '../ValidationError/ValidationError';\r\nimport './AddFolder.css'\r\n\r\nconst Required = () => (\r\n   <span className='AddBookmark__required'>*</span>\r\n)\r\n\r\nconst uuid4 = require('uuid/v4')\r\n\r\nclass AddFolder extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         error: null,\r\n         name: {\r\n            value: '',\r\n         },\r\n      }\r\n   }\r\n   static contextType = NoteContext;\r\n   updateName(name){\r\n      this.setState({ name: { value: name, touched: true }})\r\n   }\r\n   validateName() {\r\n      const name = this.state.name.value.trim();\r\n      if (name.length === 0) {\r\n        return \"Name is required\";\r\n      } else if (name.length < 3) {\r\n        return \"Name must be at least 3 characters long\";\r\n      }\r\n   }\r\n   handleSubmit(e){\r\n      e.preventDefault();\r\n      console.log(`Submit was clicked`)\r\n      // const { name } = e.target\r\n      const folder = {\r\n         id: uuid4(),\r\n         name: this.state.name.value\r\n      }\r\n      fetch(`${Config.API_ENDPOINT}/folders`, {\r\n         method: 'POST',\r\n         body: JSON.stringify(folder),\r\n         headers: {\r\n            'content-type': 'application/json'\r\n         }\r\n      })\r\n      .then(res => {\r\n         if(!res.ok){\r\n            return res.json().then(error => {\r\n               throw error\r\n            })\r\n         }\r\n         return res.json()\r\n      })\r\n      .then(data => {\r\n         this.context.addFolders(data)\r\n         this.props.history.push('/')\r\n      })\r\n      .catch(error => {\r\n         this.setState({error})\r\n      })\r\n   }\r\n   handleClickCancel = () => {\r\n      this.props.history.push('/')\r\n   }\r\n   render() {\r\n      // console.log(this.context)\r\n      const nameError = this.validateName();\r\n      return (\r\n         <>\r\n            <nav></nav>\r\n            <section className='add__folder'>\r\n               <h2>Create a Folder</h2>\r\n               {this.state.name.touched && <ValidationError message={nameError} />}\r\n               <form\r\n                  className='AddFolder__form'\r\n                  onSubmit={e => this.handleSubmit(e)}\r\n               >\r\n                  <div>\r\n                     <label htmlFor='name'>\r\n                     Name\r\n                     {' '}\r\n                     <Required />\r\n                     </label>\r\n                     <input\r\n                     type='text'\r\n                     name='name'\r\n                     id='name'\r\n                     placeholder='Folder Name'\r\n                     onChange={e => this.updateName(e.target.value)}\r\n                     />\r\n                  </div>\r\n                  \r\n                  <div className='AddBookmark__buttons'>\r\n                     <button type='button' onClick={this.handleClickCancel} >\r\n                     Cancel\r\n                     </button>\r\n                     {' '}\r\n                     <button \r\n                        type='submit'\r\n                        disabled={\r\n                           this.validateName()\r\n                        }>\r\n                     Save\r\n                     </button>\r\n                  </div>\r\n               </form>\r\n            </section>\r\n         </>\r\n      );\r\n   }\r\n}\r\n\r\nexport default AddFolder;","import React, { Component } from 'react';\r\nimport NoteContext from '../NoteContext';\r\nimport Config from '../Config';\r\n// import uuid from 'uuid';\r\nimport ValidationError from '../ValidationError/ValidationError';\r\nimport './AddNote.css'\r\n\r\nconst uuid4 = require('uuid/v4')\r\n\r\nclass AddNote extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state ={\r\n         error: null,\r\n         selected: '',\r\n         name: {\r\n            value: '',\r\n            touched: false\r\n         },\r\n         content: {\r\n            value: '',\r\n            touched: false\r\n         },\r\n         folder: {\r\n            value: '',\r\n            touched: false\r\n         }\r\n      }\r\n   }\r\n   static contextType = NoteContext\r\n\r\n   updateNoteName(name){\r\n      this.setState({ name: {value: name, touched: true }})\r\n   }\r\n   updateNoteContent(content){\r\n      this.setState({ content: {value: content, touched: true }})\r\n   }\r\n   updateNoteFolder(folder){\r\n      this.setState({ folder: {value: folder, touched: true }})\r\n   }\r\n   changeSelection(value){\r\n      if(value === 'None'){\r\n         this.setState({\r\n            selected: null\r\n         })\r\n      } else {\r\n         const folderId = this.context.folders.find(folder => folder.name === value).id\r\n         this.setState({\r\n            selected: folderId\r\n         })   \r\n      } \r\n   }\r\n   validateName() {\r\n      const name = this.state.name.value.trim();\r\n      if (name.length === 0) {\r\n        return \"Name is required\";\r\n      } else if (name.length < 3) {\r\n        return \"Name must be at least 3 characters long\";\r\n      }\r\n   }\r\n   validateContent(){\r\n      const content = this.state.content.value.trim();\r\n      if(content.length === 0){\r\n         return \"Content is required\"\r\n      }\r\n   }\r\n   validateFolder(){\r\n      const folder = this.state.selected\r\n      if(folder === null){\r\n         return \"A folder is required\"\r\n      }\r\n   }\r\n   handleNoteSubmit(event){\r\n      event.preventDefault()\r\n      const note = {\r\n         id: uuid4(),\r\n         name: this.state.name.value,\r\n         modified: new Date(),\r\n         folderId: this.state.selected,\r\n         content: this.state.content.value\r\n\r\n      }\r\n      fetch(`${Config.API_ENDPOINT}/notes`, {\r\n         method: 'POST',\r\n         body: JSON.stringify(note),\r\n         headers: {\r\n            'content-type': 'application/json'\r\n         }\r\n      })\r\n      .then(res => {\r\n         if(!res.ok){\r\n            return res.json().then(error => {\r\n               throw error\r\n            })\r\n         }\r\n         return res.json()\r\n      })\r\n      .then(data => {\r\n         this.context.addNotes(data)\r\n         this.props.history.push('/')\r\n      })\r\n      .catch(error => {\r\n         this.setState({error})\r\n      })\r\n   }\r\n   handleClickCancel = () => {\r\n      this.props.history.push('/')\r\n   }\r\n   render() {\r\n      const nameError = this.validateName();\r\n      const contentError = this.validateContent();\r\n      const folderError = this.validateFolder();\r\n      const { folders } = this.context\r\n      const options = folders.map((folder, i) => <option value={folder.name} key={i}>{folder.name}</option>)\r\n      const allowSelection = folders.length === 0\r\n      ? <div className=\"lds-facebook\"><div></div><div></div><div></div></div>\r\n      : <select\r\n         id='folder'\r\n         name='folder'\r\n         className='folder_selection'\r\n         onChange={e => this.changeSelection(e.target.value)}>\r\n            <option value='None'>\r\n               Select one...\r\n            </option>\r\n            {options}\r\n         </select>\r\n      return (\r\n         <>\r\n            <nav></nav>\r\n            <div className='add__notes'>\r\n               <form className='add__notes_form' onSubmit={e => this.handleNoteSubmit(e)}>\r\n                  <h2>Add Note</h2>\r\n                  <label htmlFor='note_name'>Note Name\r\n                     {this.state.name.touched && <ValidationError message={nameError} />} \r\n                  </label>\r\n                  <input \r\n                     type='text'\r\n                     name='note_name'\r\n                     id='note_name'\r\n                     onChange={e => this.updateNoteName(e.target.value)}\r\n                  />\r\n                  <label htmlFor='note_content'>Note Content\r\n                     {this.state.name.touched && <ValidationError message={contentError} />}\r\n                  </label>\r\n                  <textarea \r\n                     type='text'\r\n                     name='note_content'\r\n                     id='note_content'\r\n                     onChange={e => this.updateNoteContent(e.target.value)}\r\n                  />\r\n                  <div className='folder_selection'>\r\n                     <label htmlFor='folder'>Select a Folder:\r\n                        <div>{this.state.name.touched && <ValidationError message={folderError} />}</div>\r\n                     </label>\r\n                     {allowSelection}\r\n                  </div>\r\n                  <div className='registration__button__group'>\r\n                     <button type='reset' className='registration__button' onClick={this.handleClickCancel}>\r\n                        Cancel\r\n                     </button>\r\n                     <button \r\n                        type='submit' \r\n                        className='registration__buton'\r\n                        disabled={\r\n                           this.validateName() ||\r\n                           this.validateContent() ||\r\n                           this.validateFolder()\r\n                        }   \r\n                     >\r\n                        Save\r\n                     </button>\r\n                  </div>\r\n               </form>\r\n            </div>\r\n         </>\r\n      );\r\n   }\r\n}\r\n\r\nexport default AddNote;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport SidebarList from './SidebarList/SiderbarList';\r\nimport SidebarPage from './SidebarPage/SidebarPage';\r\nimport Header from './Header/Header'\r\nimport MainList from './MainList/MainList';\r\nimport MainPage from './MainPage/MainPage';\r\nimport NotesContext from './NoteContext';\r\nimport AddFolder from './AddFolder/AddFolder';\r\nimport AddNote from './AddNote/AddNote';\r\nimport Config from './Config';\r\nimport './App.css'\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      folders: [],\r\n      notes: []\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    Promise.all([\r\n        fetch(`${Config.API_ENDPOINT}/folders`),\r\n        fetch(`${Config.API_ENDPOINT}/notes`)\r\n      ])\r\n      .then(([folderRes, notesRes]) => {\r\n        if(!folderRes.ok)\r\n          return folderRes.json().then(e => Promise.reject(e));\r\n        if(!notesRes.ok)\r\n          return notesRes.json().then(e => Promise.reject(e));\r\n\r\n        return Promise.all([folderRes.json(), notesRes.json()]);\r\n      })\r\n      .then(([folders, notes]) => {\r\n        this.setState({folders, notes});\r\n      })\r\n      .catch(error => {\r\n        console.log({error})\r\n      })\r\n  }\r\n  deleteNotes = noteId => {\r\n    const newNotes = this.state.notes.filter(note => note.id !== noteId)\r\n    setTimeout(() => {\r\n      this.setState({\r\n        notes: newNotes\r\n      })\r\n    }, 200)\r\n  }\r\n  addFolders = folder => {\r\n    this.setState({ folders: [...this.state.folders, folder] })\r\n  }\r\n  addNotes = note => {\r\n    this.setState({ notes: [...this.state.notes, note]})\r\n  }\r\n  renderSidebarRoutes(){\r\n    return (\r\n        <>\r\n          {['/', '/folder/:folderId'].map(path => (\r\n              <Route\r\n                  exact path={path}\r\n                  key={path}\r\n                  component={SidebarList}\r\n              />\r\n          ))}\r\n          <Route\r\n            path='/note/:noteId'\r\n            component={SidebarPage}\r\n          />\r\n          <Route path=\"/add-folder\" component={AddFolder} />\r\n          <Route path=\"/add-note\" component={AddNote} />\r\n      </>\r\n    );\r\n  }\r\n  renderMainRoutes(){\r\n    return(\r\n      <>\r\n        {['/', '/folder/:folderId'].map(path => (\r\n          <Route\r\n            exact path={path}\r\n            key={path}\r\n            component={MainList}\r\n          />\r\n        ))}\r\n        <Route \r\n          path='/note/:noteId'\r\n          component={MainPage}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n  render(){\r\n    const renderSidebarRoutes = this.renderSidebarRoutes()\r\n    const renderMainRoutes = this.renderMainRoutes()\r\n    const contextValue = {\r\n      notes: this.state.notes,\r\n      folders: this.state.folders,\r\n      deleteNotes: this.deleteNotes,\r\n      addFolders: this.addFolders,\r\n      addNotes: this.addNotes,\r\n    }\r\n    return (\r\n      <Router>\r\n        <NotesContext.Provider value={contextValue}>\r\n          <div className='App'>\r\n            <Header />\r\n            {renderSidebarRoutes}\r\n            {renderMainRoutes}\r\n          </div>\r\n        </NotesContext.Provider>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n          ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}